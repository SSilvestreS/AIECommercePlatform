# Multi-stage build for ML.NET service
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build

# Set working directory
WORKDIR /src

# Copy solution and project files
COPY ["AIECommercePlatform.sln", "./"]
COPY ["src/Shared/AIECommerce.Shared/AIECommerce.Shared.csproj", "src/Shared/AIECommerce.Shared/"]
COPY ["src/Shared/AIECommerce.ML.Shared/AIECommerce.ML.Shared.csproj", "src/Shared/AIECommerce.ML.Shared/"]
COPY ["src/ML.Services/AIECommerce.ML.RecommendationService/AIECommerce.ML.RecommendationService.csproj", "src/ML.Services/AIECommerce.ML.RecommendationService/"]

# Restore dependencies
RUN dotnet restore "AIECommercePlatform.sln"

# Copy source code
COPY . .

# Build the application
RUN dotnet build "src/ML.Services/AIECommerce.ML.RecommendationService/AIECommerce.ML.RecommendationService.csproj" -c Release -o /app/build

# Publish the application
FROM build AS publish
RUN dotnet publish "src/ML.Services/AIECommerce.ML.RecommendationService/AIECommerce.ML.RecommendationService.csproj" -c Release -o /app/publish

# Runtime stage
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS runtime

# Install system dependencies for ML.NET
RUN apt-get update && apt-get install -y \
    libgdiplus \
    libc6-dev \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy published application
COPY --from=publish /app/publish .

# Create directory for ML models
RUN mkdir -p /app/ml/models

# Expose port
EXPOSE 5000

# Set environment variables
ENV ASPNETCORE_URLS=http://+:5000
ENV ASPNETCORE_ENVIRONMENT=Production
ENV ML_MODELS_PATH=/app/ml/models

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:5000/health || exit 1

# Run the application
ENTRYPOINT ["dotnet", "AIECommerce.ML.RecommendationService.dll"]
